import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.TreeMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeSet;

public class SpanishHonorSocietyDatabase {
	
	
private Map<String, Member> myMembers;
//private Map<String, Member> mySeniors;
//private Map<String, Member> myJuniors;
//private Map<String, Member> mySophmores;
//private Map<String, Member> myProbation;
//private Map<String, Member> myRevoked;

public  SpanishHonorSocietyDatabase()
{
	myMembers = new TreeMap<>();
	//mySeniors= new TreeMap<>();
	
	this.loadDataFromFile();
}
	
private void loadDataFromFile()
{
	// TODO: Parse file data and use it to populate data structure
	try 
	{
		Scanner fin = new Scanner(new File("SHSData.txt"));
		while(fin.hasNextLine())
		{
			String line = fin.nextLine();
			String[] parts = line.split("(\\t)");
			
			int grade = Integer.parseInt(parts[0]);
			int numSem= Integer.parseInt(parts[1]); 
			String first= parts[2];
			String last= parts[3];
			double c= Double.parseDouble(parts[4]);
			double cs= Double.parseDouble(parts[5]);
			double f= Double.parseDouble(parts[6]);
			double misc= Double.parseDouble(parts[7]);
			double d= Double.parseDouble(parts[8]); 
			String email= parts[9]; 
			int p= Integer.parseInt(parts[10]);
			String name = parts[3] + " " +parts[2];
			Member current = new Member(grade,numSem, first,last, c , cs, f, misc, d, email, p);
			myMembers.put(name, current);
			
		}
		
		//This Prints all the members in alphabetical order
		
	/*	Set<String> members = myMembers.keySet();
		for(String m : members)
		{
			System.out.println(myMembers.get(m));
		} */
		
		fin.close();
	} 
	catch (FileNotFoundException e)
	{
		// TODO Auto-generated catch block
		System.out.println("File not found. No data loaded");
	}
}

public String lookupByName(String myName)
{
	
	Set<String> members = myMembers.keySet();
	
	for(String m : members)
	{
		if (myMembers.get(m).getName().equals(myName))
		{

			return myMembers.get(m).toString();	
		}
	}
		
	
	return  "We could not find this member ";
}



public static void main(String[] args)
{
	
	SpanishHonorSocietyDatabase db= new SpanishHonorSocietyDatabase();
	Scanner scan = new Scanner(System.in);
	System.out.println("Enter probation in order to get a list of those who are in probation, revoked to get a list of those whose"
			+ " \nmembership should be rovoked, or type a name in order to find infromation of a member or quit in order to stop");
	String nextLine = scan.nextLine();
	while (!nextLine.equals("quit"))
	{
		if (nextLine.contentEquals("probation"))
		{
			System.out.println("p");
		}
		
		else if (nextLine.contentEquals("revoked"))
		{
		System.out.println("r");
		}
		else 
		{
		
		
			String member = db.lookupByName(nextLine);
			System.out.println(member);
		
			System.out.println();
		
			System.out.println("Enter a name in order to find infromation of a member or quit in order to stop");
			nextLine = scan.nextLine();
		}
	}
	System.out.println(" ");	
	System.out.println("Bye");
	scan.close();
}
	
}


